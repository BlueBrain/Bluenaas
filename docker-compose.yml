services:
  bluenaas:
    image: bluenaas-single-cell-svc
    container_name: blue-naas-single-cell-http-svc
    env_file: "./.env.local"
    build:
      dockerfile: ./Dockerfile.dev
    command:
      [
        "uvicorn",
        "bluenaas.app:app",
        "--host=0.0.0.0",
        "--port=8000",
        "--reload",
      ]
    environment:
      DEBUG: True
    volumes:
      - ${PWD}/bluenaas:/app/bluenaas
      - type: volume
        source: nfs_share
        target: /opt
        volume:
          nocopy: true
    ports:
      - "8001:8000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - ls
    depends_on:
      - worker0
      - worker1
      - redis
      - db
  
  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - ls

  db:
    container_name: postgresql_db
    image: postgres
    env_file:
      - "./.env.local"
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_HOST_AUTH_METHOD=trust
    networks:
      - ls

  worker0:
    image: bluenaas-single-cell-svc
    container_name: celery_task_manager_0
    env_file: "./.env.local"
    build:
      dockerfile: ./Dockerfile.dev
    command: ["./celery.sh"]
    environment:
      - WORKER_NAME=worker0
      # - PYTHONUNBUFFERED=1
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    volumes:
      - ${PWD}/bluenaas:/app/bluenaas
      - ${PWD}/celery.sh:/app/bluenaas/celery.sh
      - type: volume
        source: nfs_share
        target: /opt
        volume:
          nocopy: true
    depends_on:
      - db
      - redis
      - bluenaas
    networks:
      - ls

  worker1:
    image: bluenaas-single-cell-svc
    container_name: celery_task_manager_1
    env_file: "./.env.local"
    build:
      dockerfile: ./Dockerfile.dev
    command: ["./celery.sh"]
    environment:
      - WORKER_NAME=worker1
      # - PYTHONUNBUFFERED=1
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    volumes:
      - ${PWD}/bluenaas:/app/bluenaas
      - ${PWD}/celery.sh:/app/bluenaas/celery.sh
      - type: volume
        source: nfs_share
        target: /opt
        volume:
          nocopy: true
    depends_on:
      - db
      - redis
      - bluenaas
    networks:
      - ls

  flower:
    image: mher/flower
    env_file: "./.env.local"
    ports:
      - 5555:5555
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget - tries 1 - spider http:/10.0.3.20:5555/flower/healthcheck || exit"
        ]
      interval: 10s
      timeout: 3s
      retries: 3
    depends_on:
      redis:
          condition: service_healthy
      worker0:
          condition: service_started
      worker1:
          condition: service_started
    networks:
      ls:
        ipv4_address: 10.0.3.20

volumes:
  nfs_share:
    driver_opts:
      type: "nfs"
      o: "addr=host.docker.internal,rw,nolock,hard,nointr,nfsvers=3"
      device: ":/Users/meddah/nfs-storage"

networks:
  ls:
    ipam:
      config:
        - subnet: 10.0.3.0/24

